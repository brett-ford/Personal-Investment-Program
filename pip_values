-- Value remaining to be invested via personal investment plans.
-- Accurate after close of business on the 7th & 21st and at any time on any other day. 
-- Assumes that account_id, amount, and frequency form a compound primary key for the pip table. 
-- Excludes pips that are set up but haven't had their first investment. 

-- pip_invested = total amount already invested per pip 
-- pip_total = total value of a pip plan, including past and future investments 
-- pip_remaining = the total amount remaining to be invested per pip plan 


WITH pip_table_1
AS (
  SELECT *
  FROM pip
  WHERE datediff(dd, begin, GETDATE()) >= 0 AND datediff(dd, GETDATE(), end) >= 0 
  ),
  
pip_table_2
AS (
  SELECT 
    *,
    
    CASE 
      WHEN frequency = "monthly"
      THEN CASE 
             WHEN DATEPART(day, GETDATE()) >= day
             THEN (DATEDIFF(mm, begin, GETDATE()) + 1) * amount
             ELSE DATEDIFF(mm, begin, GETDATE()) * amount
           END  
           
      WHEN frequency = "quarterly"
      THEN CASE 
             WHEN DATEPART(day, GETDATE()) >= day
             THEN ((DATEDIFF(mm, begin, GETDATE())/3) + 1) * amount
             ELSE (((DATEDIFF(mm, begin, GETDATE())-1)/3) + 1) * amount
           END
           
      WHEN frequency = "semiannually"
      THEN CASE 
             WHEN DATEPART(day, GETDATE()) >= day
             THEN ((DATEDIFF(mm, begin, GETDATE())/6) + 1) * amount
             ELSE (((DATEDIFF(mm, begin, GETDATE())-1)/6) + 1) * amount
           END  
    END AS pip_invested,  
      
    CASE 
      WHEN frequency = "monthly" 
      THEN (datediff(mm, begin, end) + 1) * amount
      
      WHEN frequency = "quarterly" 
      THEN (((datediff(mm, begin, end) + 1)/3) + 1) * amount
      
      WHEN frequency = "semiannually" 
      THEN (((datediff(mm, begin, end) + 1)/6) + 1) * amount
    END AS pip_total
  
  FROM pip_table_1
  )
  
SELECT 
  *,
  pip_total - pip_invested AS pip_remaining
FROM pip_table_2
ORDER BY pip_remaining DESC


  
  
